diff --git emulator.cc emulator.cc
index 40b5a2fa..e98afca0 100644
--- emulator.cc
+++ emulator.cc
@@ -21,6 +21,12 @@
 #include <unistd.h>
 #include <getopt.h>
 
+#include "VTestHarness.h"
+#include "VTestHarness_TestHarness.h"
+#include "VTestHarness_ChipTop.h"
+
+#include "fuzz_driver.hpp"
+
 // For option parsing, which is split across this file, Verilog, and
 // FESVR's HTIF, a few external files must be pulled in. The list of
 // files and what they provide is enumerated:
@@ -328,6 +334,23 @@ done_processing:
   tile->reset = 0;
   done_reset = true;
 
+#if defined (FUZZER_SURGEFUZZ)
+  SurgeFuzzDriver fuzz_driver;
+#elif defined (FUZZER_RFUZZ)
+  FuzzDriver<RFuzz> fuzz_driver;
+#elif defined (FUZZER_DIFUZZRTL)
+  FuzzDriver<DifuzzRTL> fuzz_driver;
+#elif defined (FUZZER_DIRECTFUZZ)
+  FuzzDriver<DirectFuzz> fuzz_driver;
+#elif defined (FUZZER_BLACKBOX)
+  FuzzDriver<Blackbox> fuzz_driver;
+#else
+#error "Unsupported fuzzer"
+#endif
+
+bool is_start_recording = false;
+uint64_t deadlock_count = 0;
+
   do {
     tile->clock = 0;
     tile->eval();
@@ -339,6 +362,17 @@ done_processing:
 
     tile->clock = 1;
     tile->eval();
+
+    uint64_t debug_pc = (uint64_t)tile->TestHarness->chiptop->system__02etile_prci_domain__02etile_reset_domain__02eboom_tile__02ecore__02efuzz_debug_pc;
+    if (debug_pc >= 0x800001b0) {
+      is_start_recording = true;
+    }
+    if (is_start_recording) {
+      fuzz_driver.call_per_one_cycle(tile->TestHarness->chiptop);
+      deadlock_count = (debug_pc == 0x77777777) ? deadlock_count + 1 : 0;
+    }
+    assert(deadlock_count < 500 && "DETECTED DEADLOCK");
+
 #if VM_TRACE
     if (dump)
       tfp->dump(static_cast<vluint64_t>(trace_count * 2 + 1));
@@ -368,7 +402,7 @@ done_processing:
   else if (tsi && tsi->exit_code())
   {
     fprintf(stderr, "*** FAILED *** (code = %d, seed %d) after %ld cycles\n", tsi->exit_code(), random_seed, trace_count);
-    ret = tsi->exit_code();
+    ret = 0;
   }
   else if (jtag && jtag->exit_code())
   {
@@ -378,7 +412,7 @@ done_processing:
   else if (trace_count == max_cycles)
   {
     fprintf(stderr, "*** FAILED *** via trace_count (timeout, seed %d) after %ld cycles\n", random_seed, trace_count);
-    ret = 2;
+    ret = 0;
   }
   else if (verbose || print_cycles)
   {
